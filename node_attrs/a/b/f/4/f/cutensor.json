{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "cutensor",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports": null,
   "missing_dso_whitelist": [
    "*/libcuda.so.*",
    "*/libcuda.so.*"
   ],
   "number": "3",
   "run_exports": [
    "cutensor",
    "cutensor"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.7.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17"
   ],
   "host": [
    "patchelf >=0.12",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "cuda-version 11.0",
    "libcublas"
   ],
   "run": [
    "cuda-version",
    "cudatoolkit >=11.1,<12",
    "cuda-version",
    "libcublas"
   ],
   "run_constrained": [
    "__glibc >=2.17",
    "__glibc >=2.17"
   ]
  },
  "source": {
   "sha256": "dd3557891371a19e73e7c955efe5383b0bee954aba6a30e4892b0e7acb9deb26",
   "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-1.7.0.1-archive.zip"
  },
  "test": {
   "files": [
    "test_load_elf.c",
    "test_load_elf.c"
   ],
   "requires": [
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.2",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cuda-driver-dev"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "libcublas",
    "patchelf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "cudatoolkit",
    "libcublas"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-driver-dev",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub",
    "git",
    "sysroot_linux-64"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports": null,
   "missing_dso_whitelist": [
    "*/libcuda.so.*",
    "*/libcuda.so.*"
   ],
   "number": "3",
   "run_exports": [
    "cutensor",
    "cutensor"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.7.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "arm-variant * sbsa",
    "sysroot_linux-aarch64 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "arm-variant * sbsa",
    "sysroot_linux-aarch64 2.17"
   ],
   "host": [
    "patchelf >=0.12",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "cuda-version 11.0",
    "libcublas"
   ],
   "run": [
    "cuda-version",
    "cudatoolkit >=11.1,<12",
    "cuda-version",
    "libcublas"
   ],
   "run_constrained": [
    "__glibc >=2.17",
    "arm-variant * sbsa",
    "__glibc >=2.17",
    "arm-variant * sbsa"
   ]
  },
  "source": {
   "sha256": "c31f8e4386539434a5d1643ebfed74572011783b4e21b62be52003e3a9de3720",
   "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-1.7.0.1-archive.zip"
  },
  "test": {
   "files": [
    "test_load_elf.c",
    "test_load_elf.c"
   ],
   "requires": [
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-aarch64 2.17",
    "cudatoolkit 11.2",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-aarch64 2.17",
    "cuda-driver-dev"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "arm-variant",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-aarch64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "libcublas",
    "patchelf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "cudatoolkit",
    "libcublas"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-driver-dev",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub",
    "git",
    "sysroot_linux-aarch64"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports": null,
   "missing_dso_whitelist": [
    "*/libcuda.so.*",
    "*/libcuda.so.*"
   ],
   "number": "3",
   "run_exports": [
    "cutensor",
    "cutensor"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.7.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-ppc64le 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-ppc64le 2.17"
   ],
   "host": [
    "patchelf >=0.12",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "cuda-version 11.0",
    "libcublas"
   ],
   "run": [
    "cuda-version",
    "cudatoolkit >=11.1,<12",
    "cuda-version",
    "libcublas"
   ],
   "run_constrained": [
    "__glibc >=2.17",
    "__glibc >=2.17"
   ]
  },
  "source": {
   "sha256": "af4ad5e29dcb636f1bf941ed1fd7fc8053eeec4813fbc0b41581e114438e84c8",
   "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-1.7.0.1-archive.zip"
  },
  "test": {
   "files": [
    "test_load_elf.c",
    "test_load_elf.c"
   ],
   "requires": [
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-ppc64le 2.17",
    "cudatoolkit 11.2",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-ppc64le 2.17",
    "cuda-driver-dev"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-ppc64le"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "libcublas",
    "patchelf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "cudatoolkit",
    "libcublas"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-driver-dev",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub",
    "git",
    "sysroot_linux-ppc64le"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports": [
    "cudatoolkit"
   ],
   "missing_dso_whitelist": [
    "*/libcuda.so.*",
    "*/libcuda.so.*",
    "*/libcuda.so.*",
    "*/libcuda.so.*",
    "*/libcuda.so.*",
    "*/libcuda.so.*",
    "*/nvcuda.dll",
    "*/nvcuda.dll"
   ],
   "number": "3",
   "run_exports": [
    "cutensor",
    "cutensor",
    "cutensor",
    "cutensor",
    "cutensor",
    "cutensor",
    "cutensor",
    "cutensor"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "mv include/* $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/11/*.so* $PREFIX/lib/",
    "copy include\\\\cutensor.h %LIBRARY_INC%\\\\",
    "copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_INC%\\\\cutensor",
    "copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor",
    "del lib\\\\11\\\\*static*",
    "copy lib\\\\11\\\\*.dll %LIBRARY_BIN%\\\\",
    "copy lib\\\\11\\\\*.lib %LIBRARY_LIB%\\\\",
    "copy include\\\\cutensor.h %LIBRARY_INC%\\\\",
    "copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_INC%\\\\cutensor",
    "copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor",
    "del lib\\\\11\\\\*static*",
    "copy lib\\\\11\\\\*.dll %LIBRARY_BIN%\\\\",
    "copy lib\\\\11\\\\*.lib %LIBRARY_LIB%\\\\"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.7.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "arm-variant * sbsa",
    "sysroot_linux-aarch64 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "arm-variant * sbsa",
    "sysroot_linux-aarch64 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-ppc64le 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-ppc64le 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "patchelf >=0.12",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "cuda-version 11.0",
    "libcublas",
    "patchelf >=0.12",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "cuda-version 11.0",
    "libcublas",
    "patchelf >=0.12",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "cuda-version 11.0",
    "libcublas",
    "cuda-version 11.0",
    "libcublas",
    "cuda-version 11.0"
   ],
   "run": [
    "cuda-version",
    "cudatoolkit >=11.1,<12",
    "cuda-version",
    "libcublas",
    "cuda-version",
    "cudatoolkit >=11.1,<12",
    "cuda-version",
    "libcublas",
    "cuda-version",
    "cudatoolkit >=11.1,<12",
    "cuda-version",
    "libcublas",
    "cuda-version",
    "libcublas",
    "cuda-version",
    "cudatoolkit >=11.1,<12"
   ],
   "run_constrained": null
  },
  "source": {
   "sha256": "cdbb53bcc1c7b20ee0aa2dee781644a324d2d5e8065944039024fe22d6b822ab",
   "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-1.7.0.1-archive.zip"
  },
  "test": {
   "files": null,
   "requires": [
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cudatoolkit 11.2",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "cuda-driver-dev",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-aarch64 2.17",
    "cudatoolkit 11.2",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-aarch64 2.17",
    "cuda-driver-dev",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-ppc64le 2.17",
    "cudatoolkit 11.2",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-ppc64le 2.17",
    "cuda-driver-dev",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit 11.2"
   ]
  }
 },
 "name": "cutensor",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cutensor"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/cutensor.json"
 },
 "raw_meta_yaml": "{% set version = \"1.7.0.1\" %}\n\n{% if cuda_compiler_version in (None, \"None\", True, False) %}\n{% set cuda_major = 0 %}\n{% else %}\n{% set cuda_major = environ.get(\"cuda_compiler_version\", \"11.2\").split(\".\")[0] | int %}\n{% endif %}\n\n{% set platform = \"linux-x86_64\" %}    # [linux64]\n{% set platform = \"linux-ppc64le\" %}   # [ppc64le]\n{% set platform = \"linux-sbsa\" %}      # [aarch64]\n{% set platform = \"windows-x86_64\" %}  # [win]\n{% set extension = \"tar.xz\" %}  # [not win]\n{% set extension = \"zip\" %}     # [win]\n\npackage:\n  name: cutensor\n  version: {{ version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/{{ platform }}/libcutensor-{{ platform }}-{{ version }}-archive.{{ extension }}\n  sha256: dd3557891371a19e73e7c955efe5383b0bee954aba6a30e4892b0e7acb9deb26  # [linux64]\n  sha256: af4ad5e29dcb636f1bf941ed1fd7fc8053eeec4813fbc0b41581e114438e84c8  # [ppc64le]\n  sha256: c31f8e4386539434a5d1643ebfed74572011783b4e21b62be52003e3a9de3720  # [aarch64]\n  sha256: cdbb53bcc1c7b20ee0aa2dee781644a324d2d5e8065944039024fe22d6b822ab  # [win64]\n\nbuild:\n  number: 3\n  skip: true  # [win32 or osx or cuda_compiler_version not in (\"11.2\", \"12.0\")]\n  script:\n    - mkdir -p $PREFIX/include                                             # [linux]\n    - mv include/* $PREFIX/include/                                        # [linux]\n    - mkdir -p $PREFIX/lib                                                 # [linux]\n    - mv lib/{{ cuda_major }}/*.so* $PREFIX/lib/                           # [linux]\n\n    - copy include\\\\cutensor.h %LIBRARY_INC%\\\\                             # [win64]\n    - copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\                           # [win64]\n    - mkdir %LIBRARY_INC%\\\\cutensor                                        # [win64]\n    - copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor              # [win64]\n    - del lib\\\\{{ cuda_major }}\\\\*static*                                  # [win64]\n    - copy lib\\\\{{ cuda_major }}\\\\*.dll %LIBRARY_BIN%\\\\                    # [win64]\n    - copy lib\\\\{{ cuda_major }}\\\\*.lib %LIBRARY_LIB%\\\\                    # [win64]\n  run_exports:\n    - {{ pin_subpackage('cutensor') }}\n  ignore_run_exports:\n    - cudatoolkit  # [(cuda_compiler_version or \"\").startswith(\"11\")]\n  missing_dso_whitelist:\n    - \"*/libcuda.so.*\"    # [linux]\n    - \"*/nvcuda.dll\"      # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - arm-variant * {{ arm_variant_type }}  # [aarch64]\n    - sysroot_{{ target_platform }} 2.17    # [linux]\n  host:\n    - patchelf >=0.12  # [linux]\n    - cuda-version {{ cuda_major }}.0\n    - libcublas  # [(cuda_compiler_version or \"\").startswith(\"12\")]\n  run:\n    - {{ pin_compatible(\"cuda-version\", max_pin=\"x\") }}\n    - cudatoolkit >=11.1,<12  # [(cuda_compiler_version or \"\").startswith(\"11\")]\n    - libcublas               # [(cuda_compiler_version or \"\").startswith(\"12\")]\n  run_constrained:\n    # Only GLIBC_2.17 or older symbols present\n    - __glibc >=2.17      # [linux]\n    - arm-variant * {{ arm_variant_type }}  # [aarch64]\n\ntest:\n  requires:\n    - git\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - sysroot_{{ target_platform }} 2.17  # [linux]\n    # make sure we pick up the version matching the docker,\n    # or the linker would complain \n    - cudatoolkit {{ cuda_compiler_version }}  # [(cuda_compiler_version or \"\").startswith(\"11\")]\n    # need the libcuda stub for import test\n    - cuda-driver-dev                          # [linux and (cuda_compiler_version or \"\").startswith(\"12\")]\n  files:\n    - test_load_elf.c        # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cutensor\n  license: LicenseRef-cuTENSOR-Software-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/cutensor/license.html\n  license_file: LICENSE\n  summary: Tensor Linear Algebra on NVIDIA GPUs\n  description: |\n    The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\n    algebra library providing tensor contraction, reduction and elementwise\n    operations. cuTENSOR is used to accelerate applications in the areas of\n    deep learning training and inference, computer vision, quantum chemistry\n    and computational physics.\n\n    License Agreements:- The packages are governed by the NVIDIA cuTENSOR\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuTENSOR EULA -\n    https://docs.nvidia.com/cuda/cutensor/license.html\n  doc_url: https://docs.nvidia.com/cuda/cutensor/index.html\n  dev_url: https://developer.nvidia.com/cutensor/downloads\n\nextra:\n  recipe-maintainers:\n    - JeremyWangNVDA\n    - leofang\n    - jakirkham\n    - mtjrider\n",
 "req": {
  "__set__": true,
  "elements": [
   "arm-variant",
   "c_compiler_stub",
   "cuda-version",
   "cuda_compiler_stub",
   "cudatoolkit",
   "cxx_compiler_stub",
   "libcublas",
   "patchelf",
   "sysroot_linux-64",
   "sysroot_linux-aarch64",
   "sysroot_linux-ppc64le"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "arm-variant",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64",
    "sysroot_linux-aarch64",
    "sysroot_linux-ppc64le"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-version",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "libcublas",
    "patchelf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-version",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub",
    "libcublas"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-driver-dev",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub",
    "git",
    "sysroot_linux-64",
    "sysroot_linux-aarch64",
    "sysroot_linux-ppc64le"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "arm-variant * sbsa",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 2.17",
    "sysroot_linux-aarch64 2.17",
    "sysroot_linux-ppc64le 2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version 11.0",
    "libcublas",
    "patchelf >=0.12"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "cudatoolkit >=11.1,<12",
    "libcublas"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-driver-dev",
    "cuda_compiler_stub",
    "cudatoolkit 11.2",
    "cxx_compiler_stub",
    "git",
    "sysroot_linux-64 2.17",
    "sysroot_linux-aarch64 2.17",
    "sysroot_linux-ppc64le 2.17"
   ]
  }
 },
 "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-1.7.0.1-archive.zip",
 "version": "1.7.0.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/cutensor.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear\nalgebra library providing tensor contraction, reduction and elementwise\noperations. cuTENSOR is used to accelerate applications in the areas of\ndeep learning training and inference, computer vision, quantum chemistry\nand computational physics.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuTENSOR\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuTENSOR EULA -\nhttps://docs.nvidia.com/cuda/cutensor/license.html\n",
   "dev_url": "https://developer.nvidia.com/cutensor/downloads",
   "doc_url": "https://docs.nvidia.com/cuda/cutensor/index.html",
   "home": "https://developer.nvidia.com/cutensor",
   "license": "LicenseRef-cuTENSOR-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/cuda/cutensor/license.html",
   "summary": "Tensor Linear Algebra on NVIDIA GPUs"
  },
  "build": {
   "ignore_run_exports": [
    "cudatoolkit"
   ],
   "missing_dso_whitelist": [
    "*/nvcuda.dll",
    "*/nvcuda.dll"
   ],
   "number": "3",
   "run_exports": [
    "cutensor",
    "cutensor"
   ],
   "script": [
    "copy include\\\\cutensor.h %LIBRARY_INC%\\\\",
    "copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_INC%\\\\cutensor",
    "copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor",
    "del lib\\\\11\\\\*static*",
    "copy lib\\\\11\\\\*.dll %LIBRARY_BIN%\\\\",
    "copy lib\\\\11\\\\*.lib %LIBRARY_LIB%\\\\",
    "copy include\\\\cutensor.h %LIBRARY_INC%\\\\",
    "copy include\\\\cutensorMg.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_INC%\\\\cutensor",
    "copy include\\\\cutensor\\\\types.h %LIBRARY_INC%\\\\cutensor",
    "del lib\\\\11\\\\*static*",
    "copy lib\\\\11\\\\*.dll %LIBRARY_BIN%\\\\",
    "copy lib\\\\11\\\\*.lib %LIBRARY_LIB%\\\\"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider",
    "JeremyWangNVDA",
    "leofang",
    "jakirkham",
    "mtjrider"
   ]
  },
  "package": {
   "name": "cutensor",
   "version": "1.7.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "cuda-version 11.0",
    "libcublas",
    "cuda-version 11.0"
   ],
   "run": [
    "cuda-version",
    "libcublas",
    "cuda-version",
    "cudatoolkit >=11.1,<12"
   ],
   "run_constrained": null
  },
  "source": {
   "sha256": "cdbb53bcc1c7b20ee0aa2dee781644a324d2d5e8065944039024fe22d6b822ab",
   "url": "https://developer.download.nvidia.com/compute/cutensor/redist/libcutensor/windows-x86_64/libcutensor-windows-x86_64-1.7.0.1-archive.zip"
  },
  "test": {
   "files": null,
   "requires": [
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "git",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit 11.2"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "libcublas"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "cudatoolkit",
    "libcublas"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub",
    "git"
   ]
  }
 }
}